namespace: cdro

resources:
- ./resources/namespaces.yaml
- ./resources/storageclasses.yaml
- ./resources/cert-manager.yaml
- ./resources/secrets.yaml
- ./resources/ingressclasses.yaml
- ./resources/pvcs.yaml
- ./resources/configmaps.yaml
- ./resources/metricbeat.yaml

helmCharts:
  #------------------------------------------
  # CDRO DB
  #------------------------------------------  
#- name: postgresql
#  namespace: cdro
#  valuesFile : ./values/postgre-values.yaml
#  repo: https://charts.bitnami.com/bitnami
#  version: 13.2.24
#  releaseName: postgre 
#  IncludeCRDs: true
- name: postgresql-ha
  namespace: cdro
  repo: https://charts.bitnami.com/bitnami
  version: 11.9.1   
  releaseName: postgresql
  valuesFile: ./values/postgre-ha-values.yaml
  includeCRDs: true
  #------------------------------------------
  # CDRO 
  #------------------------------------------    
- name: cloudbees-flow
  namespace: cdro
  valuesFile : ./values/cdro-values.yaml
  repo: https://public-charts.artifacts.cloudbees.com/repository/public
  version: 2.28.0
  releaseName: cdro 
  IncludeCRDs: true
  #------------------------------------------
  # CDRO Agent
  #------------------------------------------  
- name: cloudbees-flow-agent
  namespace: cdro
  valuesFile : ./values/cdro-agent-values.yaml
  repo: https://public-charts.artifacts.cloudbees.com/repository/public
  version: 2.28.0
  releaseName: cdro-remote-agent
  IncludeCRDs: true
  #------------------------------------------
  # Devops Insight Only Kibana
  #------------------------------------------
- name: kibana
  namespace: cdro
  valuesFile : ./values/dois-kibana-value.yaml
  repo: https://helm.elastic.co
  version: 7.17.1
  releaseName: kibana
  IncludeCRDs: true
  #------------------------------------------
  # Monitoring 
  #------------------------------------------
- name: elasticsearch
  namespace: cdro
  valuesFile : ./values/es-values.yaml
  repo: https://helm.elastic.co
  version: 7.17.1
  releaseName: elasticsearch
  IncludeCRDs: true
- name: kibana
  namespace: cdro
  valuesFile : ./values/es-kibana-value.yaml
  repo: https://helm.elastic.co
  version: 7.17.1
  releaseName: eskibana
  IncludeCRDs: true
- name: filebeat
  namespace: cdro
  valuesFile : ./values/es-filebeat-value.yaml
  repo: https://helm.elastic.co
  version: 7.17.1
  releaseName: esfilebeat
  IncludeCRDs: true

patches:
  - target:
      kind: ConfigMap
      name: flow-init-scripts
    patch: | 
      - op: replace
        path: /data/startup.sh
        value: |
          #!/bin/bash

          # We don't need any actions here for the upgrade case
          if [ "$CBF_SERVER_UPGRADE_MODE" = "1" ]; then
              exit 0
          fi

          log() {
              echo "$(date --iso-8601=ns | sed 's/[,\.]\([0-9][0-9][0-9]\).\+$/.\1/') * $1"
          }

          set -e

          (
              wait_server_state() {
                  SERVER_STATE=$(ectool getServerStatus --timeout 5000 --serverStateOnly 1)

                  while [ "$SERVER_STATE" != "$1" ]; do
                      if [[ "$SERVER_STATE" == "failed" ]]; then
                          log "ERROR: Server failed to run failing initialization attempt"
                          exit 2
                      else
                          log "Server state is ${SERVER_STATE}, waiting for $1"
                      fi
                      PREV_STATE=${SERVER_STATE}
                      SERVER_STATE=$(ectool getServerStatus --timeout 5000 --serverStateOnly 1)
                      sleep 5
                  done

                  log "Server has state: $SERVER_STATE"
              }

              log "Waiting for CloudBees Flow server up..."

              wait_server_state "databaseConfiguration"

              log "Configuring CloudBees Flow server database..."
              if ! ectool --silent --timeout 36000 setDatabaseConfiguration \
                  --databaseType "$CBF_DB_TYPE" --port "$CBF_DB_PORT" \
                  --databaseName "$CBF_DB_NAME" --userName "$CBF_DB_USER" \
                  --password "$CBF_DB_PASSWORD" --hostName "$CBF_DB_HOST" \
                  --ignorePasskeyMismatch true \
                  --ignoreServerMismatch true
              then
                  log "ERROR: could not configure CloudBees Flow server."
                  exit 1
              fi
              log "Database '${CBF_DB_TYPE}' configured on CloudBees Flow server"

          ) &
  - target:
      kind: Ingress
      name: flow-ingress
    patch: |
      - op: replace
        path: /apiVersion
        value: networking.k8s.io/v1
      - op: add
        path: /spec/rules/0/http/paths/0/pathType
        value: ImplementationSpecific
      - op: add
        path: /spec/rules/0/http/paths/1/pathType
        value: ImplementationSpecific
      - op: replace
        path: /spec/rules/0/http/paths/0/backend
        value:
          service:
            name: flow-web
            port: 
              number: 80 
      - op: replace
        path: /spec/rules/0/http/paths/1/backend
        value:
          service:
            name: flow-web
            port: 
              number: 80 
      - op: add
        path: /spec/ingressClassName
        value: alb
      - op: replace
        path: /metadata/annotations
        value:
          alb.ingress.kubernetes.io/certificate-arn: "arn:aws:acm:ap-northeast-2:960249453675:certificate/5ef7ac4b-8549-480b-ac9b-6efae081ecbf"
          alb.ingress.kubernetes.io/group.name: "cdro-cloudbees-flow"
          alb.ingress.kubernetes.io/healthcheck-path: "/auth/"
          alb.ingress.kubernetes.io/listen-ports: '[{"HTTP":80}, {"HTTPS":443}]'
          alb.ingress.kubernetes.io/scheme: "internet-facing"
          alb.ingress.kubernetes.io/ssl-redirect: "443"
          alb.ingress.kubernetes.io/target-type: "ip"
          alb.ingress.kubernetes.io/target-group-attributes: "stickiness.enabled=true,stickiness.lb_cookie.duration_seconds=4000"
          external-dns.alpha.kubernetes.io/hostname: "cdro.idtplateer.com"
  - target:
      kind: StatefulSet
      name: cdro-remote-agent-flow-agent
    patch: |
      - op: replace
        path: /spec/template/spec/containers/0/livenessProbe
        value:
          exec:
            command: [/opt/cbflow/configmap/health-check.pl]
          initialDelaySeconds: 60
          periodSeconds: 10
          timeoutSeconds: 5    
      - op: add
        path: /spec/template/spec/containers/0/volumeMounts/-
        value:
          mountPath: /opt/cbflow/configmap
          name: flow-agent-health-check
      - op: add
        path: /spec/template/spec/volumes/-
        value:
          name: flow-agent-health-check
          configMap:
            defaultMode: 0777
            name: flow-agent-health-check
  #- target:
  #    kind: Deployment
  #    name: flow-web
  #  patch: |-
  #    - op: replace
  #      path: /spec/template/spec/initContainers
  #      value: []